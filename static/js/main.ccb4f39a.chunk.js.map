{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","process","REACT_APP_CRYPTO_API_KEY","REACT_APP_CRYPTO_API_HOST","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getExchanges","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","REACT_APP_NEWS_API_KEY","REACT_APP_NEWS_API_HOST","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ccb4f39a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst { REACT_APP_CRYPTO_API_KEY, REACT_APP_CRYPTO_API_HOST } = process.env;\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": `${REACT_APP_CRYPTO_API_HOST}`,\n  \"x-rapidapi-key\": `${REACT_APP_CRYPTO_API_KEY}`,\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com/\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../components\";\nimport Loader from \"./Loader\";\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)} </p>\n                <p>Market Cap: {millify(currency.marketCap)} </p>\n                <p>Daily: {millify(currency.change)}% </p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport LineChart from \"./LineChart\";\nimport Loader from \"./Loader\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US Dollar (USD). View value\n          statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Timeperiod\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Stats Info\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"coin-desc-link\">\n          <Row className=\"coin-desc\">\n            <Title level={3} className=\"coin-details-heading\">\n              What is {cryptoDetails.name}?\n            </Title>\n            {HTMLReactParser(cryptoDetails.description)}\n          </Row>\n          <Col className=\"coin-links\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Links\n            </Title>\n            {cryptoDetails.links?.map((link) => (\n              <Row className=\"coin-link\" key={link.name}>\n                <Title level={5} className=\"link-name\">\n                  {link.type}\n                </Title>\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                  {link.name}\n                </a>\n              </Row>\n            ))}\n          </Col>\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst { REACT_APP_NEWS_API_KEY, REACT_APP_NEWS_API_HOST } = process.env;\r\n\r\nconst cryptoNewsApiHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": `${REACT_APP_NEWS_API_HOST}`,\r\n  \"x-rapidapi-key\": `${REACT_APP_NEWS_API_KEY}`,\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImage =\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  const { data } = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map((coin) => (\n              <Option value={coin.name}>{coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=\"news\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}{\" \"}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  Cryptocurrencies,\n  News,\n  CryptoDetails,\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoworld <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}